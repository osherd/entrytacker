name: entrytracker cicd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build_application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      #Run the application (outside of a container)
      - name: Run the application on port 5000 in the background
        run: |
          nohup python app.py &
      - name: Run tests
        run: |
          curl http://localhost:5000

      # install docker-compose
      - name: install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Package the application
      - name: Package the application into a Docker container
        run: docker build -t entry-tracker:latest .

        # Find the process using port 5000 and kill it
      - name: Kill the process using port 5000
        run: |
          sudo lsof -t -i:5000 | xargs kill -9

      - name: Run the application in the background
        run: |
          docker-compose up -d
      - name: Run curl tests
        run: |
          sleep 5
          curl http://localhost:5000

      - name: configure aws credentials
        run: aws configure set aws_access_key_id ${{ secrets.ECR_ACCESS_KEY }} && aws configure set aws_secret_access_key ${{ secrets.ECR_SECRET_KEY }} && aws configure set region ${{ secrets.AWS_REGION }}

      - name: Authenticate Docker to AWS ECR
        run: aws ecr get-login-password --region ${{secrets.AWS_REGION}} | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com

        # run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # - name: Tag Docker image
      #   run: docker tag entry-tracker:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/prod/entry-tracker:latest
      # - name: Push Docker image to ECR
      #   run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/prod/entry-tracker:latest

      # - name: Push the artifact to AWS ECR registry
      #   run: |
      #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      #     docker build -t prod/entry-tracker .
      #     docker tag prod/entry-tracker:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/prod/entry-tracker:latest

      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/prod/entry-tracker:latest
